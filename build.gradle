apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

processResources.outputs.upToDateWhen {false}

version = project.getProperty('project.version')
gradle.taskGraph.whenReady {taskGraph ->
    if(!taskGraph.hasTask(release)) {
        version += '-SNAPSHOT'
        compileJava.options.compilerArgs << "-Xlint:all"
    }
}
if (System.getenv().containsKey('BUILD_NUMBER'))
    version += "-#${System.getenv('BUILD_NUMBER')}"

configurations {
    deployerJars
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

repositories {
    mavenCentral()
    maven {
        url "http://repo.bukkit.org/content/groups/public/"
    }
    maven {
        url "http://ci.lilypadmc.org/plugin/repository/everything"
    }
    maven {
        url "http://nexus.theyeticave.net/content/repositories/pub_releases"
    }
    maven {
        url "http://repo.comphenix.net/content/groups/public"
    }
    maven {
        url "http://maven.tyrannyofheaven.org"
    }
    maven {
        url "http://maven.flamin.me/repositories/releases"
    }
    maven {
        url "http://maven.flamin.me/repositories/snapshots"
    }
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-http:2.2'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'org.bukkit', name: 'bukkit', version: '1.7.9-R0.2'
    compile group: 'net.milkbowl.vault', name: 'Vault', version: '1.4.1', ext: 'jar'
    compile group: 'com.comphenix.protocol', name: 'ProtocolLib', version: '3.3.1', ext: 'jar'
    compile group: 'me.flamin', name: 'lilypadOnlinePlayers', version: '3.0.2', ext: 'jar'
    compile group: 'lilypad.client.connect', name: 'api', version: '0.0.1-SNAPSHOT', ext: 'jar'
    compile group: 'org.tyrannyofheaven.bukkit', name: 'zPermissions', version: '1.3-SNAPSHOT', ext: 'jar'
}

jar {
    archiveName = "lilypadTabList.jar"

    manifest {
        attributes 'Implementation-Title': 'lilypadTabList', 'Implementation-Version': version
    }
}

processResources.doFirst {
    filter {
        line ->
            line
                .replace('${project.name}', rootProject.name)
                .replace('${project.build.version}', version)
                .replace('${project.url}', project.getProperty('project.url'))
                .replace('${project.description}', project.getProperty('project.description'))
    }
}

uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = 'me.flamin'
        configuration = configurations.deployerJars
        repository(url: "http://maven.flamin.me/upload/repositories/releases") {
            authentication(
                    userName: project.getProperty('credentials.flamin.me.maven.username'),
                    password: project.getProperty('credentials.flamin.me.maven.password')
            )
        }
        snapshotRepository(url: "http://maven.flamin.me/upload/repositories/snapshots") {
            authentication(
                    userName: project.getProperty('credentials.flamin.me.maven.username'),
                    password: project.getProperty('credentials.flamin.me.maven.password')
            )
        }
    }
}

task release(dependsOn: 'uploadArchives') << {
    println "Building release!"
}